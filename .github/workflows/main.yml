name: oci-terraform-build-demo
on:
  workflow_dispatch:
    inputs:
      actions:
        description: "action: apply/destroy"
        default: "apply"
        required: true
      module:
        description: "module name"
        default: "oci-infra"
        required: true
jobs:
  oci-infra-demo:
    name: Build With Terraform
    runs-on: ubuntu-latest
    env:
      TF_VAR_tenancy_ocid: ${{secrets.OCI_TENANCY_OCID}}
      TF_VAR_compartment_ocid: ${{secrets.OCI_COMPARTMENT_OCID}}
      TF_VAR_user_ocid: ${{secrets.OCI_USER_OCID}}
      TF_VAR_private_key_password: ${{secrets.OCI_PASSPHRASE}}
      TF_VAR_private_key: ${{secrets.OCI_KEY_FILE}}
      TF_VAR_fingerprint: ${{secrets.OCI_FINGERPRINT}}
      TF_VAR_region: ${{secrets.OCI_REGION}}
      TF_VAR_bucket_name: "test_bucket"

    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
      - name: "echo input"
        run: |
          echo "actions: ${{github.event.inputs.actions}}"
          echo "module: ${{github.event.inputs.module}}"
      - name: "Init Terraform"
        id: init
        run: terraform init

      - name: "Validate Terraform"
        id: validate
        run: terraform validate

      - name: "Terraform Plan"
        id: plan
        run: terraform plan -target=module.${{  github.event.inputs.module }}
        continue-on-error: false

      - name: "Terraform Apply"
        id: apply
        if: ${{  github.event.inputs.actions == 'apply'}}
        run: terraform apply -target=module.${{  github.event.inputs.module }} -auto-approve
      - name: "Terraform destroy"
        id: destroy
        if: ${{  github.event.inputs.actions == 'destroy'}}
        run: terraform destroy -target=module.${{  github.event.inputs.module }} -auto-approve
